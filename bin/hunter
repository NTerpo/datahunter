#!/usr/bin/env ruby

require 'datahunter'
require 'rubygems'
require 'json'
require 'commander/import'
require 'rest_client'
require 'launchy'
require 'colorize'
require 'downloadr'

program :version, Datahunter::VERSION
program :description, 'Find and download Open Datasets directly from your terminal'
program :help_formatter, :compact

command :find do |c|
  c.syntax = 'hunter find keyword [spatial-coverage] [temporal-coverage]'
  c.summary = '$ hunter find <keyword> <geo-coverage> <temporal-coverage>
                             * Returns the 3 most popular (most reused, viewed, etc)
                               datasets corresponding to the triple keyword,
                               spatial-coverage and temporal-coverage
                             * Allow you to either download the dataset or to open
                               your favorite browser directly at the good page'.colorize(:blue)
  c.description = c.summary
  c.example 'Find open data for the U.S. population', 'hunter find population us'
  c.action do |args, options|

    start_time = Time.now

    if args[0].nil?
      puts "usage: $ hunter find keyword [geo] [temp]"
    elsif
      url = Datahunter.datasets_url(args[0], args[1], args[2])

      response = RestClient.get(url, :content_type => :json) do |response, request, result, &block|
        elapsed_time = Time.now - start_time

        case response.code
        when 200
          datasets = JSON.parse(response.body).reverse
          puts "### Response in #{elapsed_time} seconds".colorize(:blue)
          
          messages = [
            "### Looks like we've got something for you!".colorize(:blue),
            "### And this one?".colorize(:blue),
            "### Last try...".colorize(:blue)
          ]
          
          3.times do |index|
            puts messages[index]
            puts
            Datahunter.print_dataset_info datasets[index]
            
            case ask "### get the data? (y/n)".colorize(:yellow)
            when 'y'
              if datasets[index]["resources"].any?
                Datahunter.download_the_data datasets[index]
              else
                puts "You can't download this dataset directly, but you should from there"
                Launchy.open(datasets[index]["uri"], options = {})
              end
              break
           
            else # When no
              if index == 2
                puts ("You may want to try: ".colorize(:red) + "'$ hunter search #{args[0].downcase}'".colorize(:blue))
              end
              if index >= 2 or datasets[index+1].nil?
                Datahunter.print_excuse_message
                Datahunter.print_request_dataset_message
                Datahunter.print_feedback_request
                break
              end
            end
          end
        when 204
          puts "We've found nothing for your query: as every good hunter... we are still learning".colorize(:red)
          Datahunter.print_request_dataset_message
        else
          response.return!(request, result, &block)
        end
      end
    end
  end
end

command :search do |c|
  c.syntax = 'hunter search keyword [spatial-coverage] [temporal-coverage]'
  c.summary = '$ hunter search <keyword> <geo-coverage> <temporal-coverage>
                             * Returns all the datasets corresponding to
                               the query, sorted by popularity.
                             * WARNING: this command is going to be modified soon!'.colorize(:blue)
  c.description = c.summary
  c.example 'Search open data for population', 'hunter search population'
  c.action do |args, options|

    start_time = Time.now

    url = Datahunter.datasets_url(args[0], args[1], args[2])

    response = RestClient.get(url, :content_type => :json) do |response, request, result, &block|

      elapsed_time = Time.now - start_time

      case response.code
      when 200
        datasets = JSON.parse(response.body).reverse
        puts "### Response in #{elapsed_time} seconds".colorize(:blue)
        puts "### We've found #{datasets.size} datasets corresponding to your query #{args[0].downcase}:".colorize(:blue)
        puts
        datasets.each_with_index do |result, i|
          puts ("#{i}. ".colorize(:yellow) +
                "#{result["title"]}".colorize(:green) +
                " id: #{result["_id"]}")
        end
        puts
        puts ("You can get more info about a dataset with " +
              "$ hunter info <id>".colorize(:blue))
        puts ("You can download directly a dataset with " +
             "$ hunter download <id>".colorize(:blue))
      when 500
        puts "We found nothing for your query: as every good hunter... we are still learning".colorize(:red)
        Datahunter.print_excuse_message
        Datahunter.print_feedback_request
      else
        response.return!(request, result, &block)
      end
    end
  end
end



command :about do |c|
  c.syntax = 'hunter about'
  c.summary = 'About Hunter
                             * Vision
                             * Value Proposition
                             * Stats
                             * Last datasets indexed'.colorize(:blue)
  c.description = c.summary
  c.action do |args, options|
    puts "........8888888888888888888888..........
.....88888888888888888888888888888......
....8888888888888888888888888888888.....
...888888888888888888888888888~88888?...
..88888...888888888888888888..+888888...
.888888.=....................O78888888..
?888888.......................Z88888888.
8888888.......................888888888.
8888888.......................888888888.
8888888:......8O.......88.....888888888.
88......ZO.....8=.....Z8.....8888888888.
$.........:8...............888888888888.
............8.............8888888888888.
..............O.........:88888888888888.
...............8........88888888888888..
................O......8.......888888...
 ................8.88.8.........=8887 ..
. ................8888...........?8.....
.. ...........................8888......
... .........................888........
....  .....................:88..........
.....      ...............8.............".colorize(:red)
    puts
    puts 'Find and download Open Datasets directly from the terminal!'.colorize(:red)
    puts 
    puts 'We believe there will be more and more data available on the web and the main issue will be to find them and to manage each sources. So we try to do it for you: not by pre-processing them but by orienting you.'.colorize(:red)
    puts
    puts 'Number of datasets currently indexed: 1920'  
    puts
    puts 'Last dataset indexed: "India Power Sector Review"'
    puts
    puts "### Hunter is still a prototype, please don't hesitate to help us make open datasets workflow better!".colorize(:blue)
    Datahunter.print_feedback_request
  end
end

command :guide do |c|
  c.action {puts ('$ hunter find <keyword> <geo-coverage> <temporal-coverage> '.colorize(:blue) +
                  '
* Returns the 3 most popular (most reused, viewed, etc) datasets corresponding to the query
* Allow you to either download the dataset or to open your favorite browser directly at the good page')

puts ('$ hunter search <keyword> <geo-coverage> <temporal-coverage>'.colorize(:blue) +
      '
* Returns all the datasets corresponding to the query, sorted by popularity.
* WARNING: this command is going to be modified soon!')

puts ('$ hunter about'.colorize(:blue) +
'
* Vision
* Value Proposition
* Stats
* Last datasets indexed')}
end
default_command :guide
